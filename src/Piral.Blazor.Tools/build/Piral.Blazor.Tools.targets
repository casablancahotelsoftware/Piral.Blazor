<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <UsingTask TaskName="SetProjectJsonVersionTask" AssemblyFile="$(MSBuildThisFileDirectory)..\lib\netstandard2.0\Piral.Blazor.Tools.dll" />
    <UsingTask TaskName="AddProjectJsonOverwritesTask" AssemblyFile="$(MSBuildThisFileDirectory)..\lib\netstandard2.0\Piral.Blazor.Tools.dll" />
    <UsingTask TaskName="CollectStaticWebAssetsTask" AssemblyFile="$(MSBuildThisFileDirectory)..\lib\netstandard2.0\Piral.Blazor.Tools.dll" />
    <UsingTask TaskName="SetMonorepoPiralInstanceTask" AssemblyFile="$(MSBuildThisFileDirectory)..\lib\netstandard2.0\Piral.Blazor.Tools.dll" />
    <UsingTask TaskName="ScaffoldPiletTask" AssemblyFile="$(MSBuildThisFileDirectory)..\lib\netstandard2.0\Piral.Blazor.Tools.dll" />

    <ItemGroup>
        <Content Update="wwwroot\**" CopyToOutputDirectory="Always" />
    </ItemGroup>

    <PropertyGroup>
        <_piletFolderBase>..\piral~</_piletFolderBase>
        <_piletFolderPath>$(MSBuildProjectDirectory)\$(_piletFolderBase)\$(MSBuildProjectName)</_piletFolderPath>
        <_piletUrl>http://localhost:1234</_piletUrl>
    </PropertyGroup>

    <Target Name="SetupPiral" DependsOnTargets="ResolveStaticWebAssetsInputs" AfterTargets="Build">
        <CallTarget Targets="Scaffold" />
        <CallTarget Targets="CollectStaticWebAssets" />
    </Target>

    <Target Name="Scaffold" DependsOnTargets="RunResolvePackageDependencies">
        <PropertyGroup>
            <_installedToolsVersion>@(PackageDefinitions->WithMetadataValue("Name", "Piral.Blazor.Tools")->'%(Version)')</_installedToolsVersion>
        </PropertyGroup>
        <ScaffoldPiletTask
            Source="$(MSBuildProjectDirectory)"
            Target="$(_piletFolderBase)"
            Framework="$(TargetFramework)"
            FrameworkMoniker="$(TargetFrameworkMoniker)"
            CliVersion="$(PiralCliVersion)"
            ToolsVersion="$(_installedToolsVersion)"
            ContentFolder="$(MSBuildThisFileDirectory)..\content"
            PiralInstance="$(PiralInstance)"
            ProjectName="$(MSBuildProjectName)"
            Bundler="$(Bundler)"
            NpmRegistry="$(NpmRegistry)" />
    </Target>

    <Target Name="SetPackageJsonVersion" AfterTargets="Scaffold">
        <SetProjectJsonVersionTask
            PackageJsonPath="$(_piletFolderPath)\package.json"
            Version="$(Version)" />
    </Target>

    <Target Name="AddPackageJsonOverwrites" AfterTargets="SetPackageJsonVersion">
        <AddProjectJsonOverwritesTask
            PackageJsonPath="$(_piletFolderPath)\package.json"
            OverwritesPath="$(MSBuildProjectDirectory)\.piralconfig\package-overwrites.json" />
    </Target> 

    <Target Name="CollectStaticWebAssets" AfterTargets="SetPackageJsonVersion">
        <CollectStaticWebAssetsTask
            AssetPath="%(StaticWebAsset.Identity)"
            TargetPath="$(_piletFolderPath)\src"
            ProjectsWithStaticFiles="$(ProjectsWithStaticFiles)"
            JsImportsPath="$(MSBuildProjectDirectory)\.piralconfig\js-imports.json" />
    </Target>

    <Target Name="InstallDependencies" AfterTargets="AddPackageJsonOverwrites" Condition="'$(Monorepo)'!='enable'">
        <Exec Command="echo 'Installing dependencies...'" />
        <Exec WorkingDirectory="$(_piletFolderPath)" Command="npm install --silent" />
    </Target>

	<Target Name="RemoveNodeModulesAndLockFile" AfterTargets="InstallDependencies" Condition="'$(Monorepo)'=='enable'"> 
		<RemoveDir Directories="$(_piletFolderPath)\node_modules" />
		<Delete Files="$(_piletFolderPath)\package-lock.json" />
	</Target>

    <Target Name="SetMonorepoAppShell" AfterTargets="RemoveNodeModulesAndLockFile" Condition="'$(Monorepo)'=='enable'">
        <SetMonorepoPiralInstanceTask
            PiralInstancePath="$(PiralInstance)"
            PiletPath="$(_piletFolderPath)" />
    </Target>

	<Target Name="UpdateAnalyzer" AfterTargets="Scaffold" Condition="Exists('$(_piletFolderPath)\..\.config\dotnet-tools.json')">
		<PropertyGroup>
			<_installedToolsVersion>@(PackageDefinitions->WithMetadataValue("Name", "Piral.Blazor.Tools")->'%(Version)')</_installedToolsVersion>
		</PropertyGroup>
		<!-- Update analyzer with version that matches the Tools version -->
		<Exec WorkingDirectory="$(_piletFolderPath)" Command="dotnet tool update Piral.Blazor.Analyzer --version $(_installedToolsVersion) --local" />
	</Target>

    <Target Name="InstallAnalyzer" AfterTargets="UpdateAnalyzer" Condition="!Exists('$(_piletFolderPath)\..\.config\dotnet-tools.json')">
        <PropertyGroup>
            <_installedToolsVersion>@(PackageDefinitions->WithMetadataValue("Name", "Piral.Blazor.Tools")->'%(Version)')</_installedToolsVersion>
        </PropertyGroup>
        <Exec WorkingDirectory="$(_piletFolderPath)" Command="dotnet new tool-manifest --output .." />
        <!-- Install analyzer with version that matches the Tools version -->
        <Exec WorkingDirectory="$(_piletFolderPath)" Command="dotnet tool install Piral.Blazor.Analyzer --version $(_installedToolsVersion) --local" />
    </Target>

    <Target Name="RestoreTools" BeforeTargets="Build" Condition="Exists('$(_piletFolderPath)') AND Exists('$(_piletFolderPath)\..\.config\dotnet-tools.json')">
        <Exec WorkingDirectory="$(_piletFolderPath)" Command="dotnet tool restore" />
    </Target>

    <Target Name="OverwriteIndexHtml" BeforeTargets="Build">
        <PropertyGroup>
            <_indexHtml>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta http-equiv=&quot;refresh&quot; content=&quot;0;url=$(_piletUrl)/&quot; /&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;</_indexHtml>
        </PropertyGroup>
        <WriteLinesToFile
            File="$(MSBuildProjectDirectory)\wwwroot\index.html"
            Lines="$(_indexHtml)"
            Overwrite="true"
            Encoding="UTF-8"
        />
    </Target>

    <Target Name="CopyScopedCss" AfterTargets="Build">
        <!-- Always create an empty one first to avoid breaking index.tsx -->
        <Touch Files="$(_piletFolderPath)\src\$(MSBuildProjectName).styles.css" AlwaysCreate="true" />
        <Copy
            SourceFiles="obj\$(Configuration)\$(TargetFrameWork)\scopedcss\bundle\$(MSBuildProjectName).styles.css"
            DestinationFolder="$(_piletFolderPath)\src"
            Condition="Exists('obj\$(Configuration)\$(TargetFrameWork)\scopedcss\bundle\$(MSBuildProjectName).styles.css')"
        />
    </Target>

    <Target Name="HotReload" AfterTargets="CopyScopedCss">
        <Touch Files="$(_piletFolderPath)\src\blazor.codegen" Condition="Exists('$(_piletFolderPath)\src\blazor.codegen')" />
    </Target>

</Project>