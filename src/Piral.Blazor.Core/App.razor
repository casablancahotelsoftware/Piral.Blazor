@inject IComponentActivationService Activation

<DynamicComponent Type="@Activation.Root" Parameters="@parameters" />

@code {
    private static readonly RenderFragment componentView = @<ComponentView />;

    private readonly Dictionary<string, object> parameters = new Dictionary<string, object>{
        { "ChildContent", componentView }
    };

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Activation.RootChanged += (s, e) =>
            {
                this.StateHasChanged();
            };
        }

        return base.OnAfterRenderAsync(firstRender);
    }
}