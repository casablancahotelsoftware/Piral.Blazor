trigger:
  branches:
    include:
    - blazor-*
  tags:
    include:
    - v*

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: secrets
  - group: defaults

steps:

- task: UseDotNet@2
  displayName: Install dotnet 7 SDK
  inputs:
    version: '7.0.x'
    packageType: sdk

- script: dotnet build ./src/Piral.Blazor.Core --configuration $(buildConfiguration)
  displayName: 'Build Core'

- script: dotnet build ./src/Piral.Blazor.Utils --configuration $(buildConfiguration)
  displayName: 'Build Utils'

- script: dotnet build ./src/Piral.Blazor.Analyzer --configuration $(buildConfiguration)
  displayName: 'Build Analyzer'

- script: dotnet build ./src/Piral.Blazor.Tools --configuration $(buildConfiguration)
  displayName: 'Build Tools'

- script: dotnet build ./src/Piral.Blazor.DevServer --configuration $(buildConfiguration)
  displayName: 'Build DevServer'

- script: |
    dotnet build tests
    dotnet test tests
  displayName: 'Run Tests'

- script: |
    cd ./src/Piral.Blazor.Core
    export TARGET_VERSION=`node -e 'console.log(require("./obj/project.assets.json").project.version)'`
    export NPM_TOKEN=$(npmToken)
    dotnet publish -c Release --output ../../dist/release
    dotnet publish -c Debug --output ../../dist/debug /p:CopyOutputSymbolsToPublishDirectory=true
    cd ../../dist
    cp ../template/* .
    cp ../LICENSE .
    npm version $TARGET_VERSION
    echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> ~/.npmrc
    echo always-auth=true >> ~/.npmrc
    cd ..
  displayName: 'Prepare NPM Package'

- script: |
    cd dist
    sed -i -e "s/\(\"version\":\\s\+\"\([0-9]\+\.\?\)\+\)/\1-pre.$BUILD_BUILDNUMBER/" ./package.json;
    cat ~/.npmrc
    npm publish --tag next
    cd ..
  displayName: 'Publish Pre-Package on NPM'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/blazor-'))

- script: |
    cd dist
    npm publish --tag latest
    cd ..
  displayName: 'Publish Package on NPM'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))

- script: rm -rf dist
  displayName: 'Reset Output'

- script: dotnet pack ./src/Piral.Blazor.Core --configuration $(buildConfiguration) --version-suffix pre.$BUILD_BUILDNUMBER --output ./dist
  displayName: 'Pack Core (Pre)'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/blazor-'))

- script: dotnet pack ./src/Piral.Blazor.Core --configuration $(buildConfiguration) --output ./dist
  displayName: 'Pack Core'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))

- script: dotnet pack ./src/Piral.Blazor.Utils --configuration $(buildConfiguration) --version-suffix pre.$BUILD_BUILDNUMBER --output ./dist
  displayName: 'Pack Utils (Pre)'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/blazor-'))

- script: dotnet pack ./src/Piral.Blazor.Utils --configuration $(buildConfiguration) --output ./dist
  displayName: 'Pack Utils'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))

- script: dotnet pack ./src/Piral.Blazor.Template --configuration $(buildConfiguration) --version-suffix pre.$BUILD_BUILDNUMBER --output ./dist
  displayName: 'Pack Template (Pre)'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/blazor-'))

- script: dotnet pack ./src/Piral.Blazor.Template --configuration $(buildConfiguration) --output ./dist
  displayName: 'Pack Template'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))

- script: dotnet pack ./src/Piral.Blazor.Analyzer --configuration $(buildConfiguration) --version-suffix pre.$BUILD_BUILDNUMBER --output ./dist
  displayName: 'Pack Analyzer (Pre)'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/blazor-'))

- script: dotnet pack ./src/Piral.Blazor.Analyzer --configuration $(buildConfiguration) --output ./dist
  displayName: 'Pack Analyzer'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))

- script: dotnet pack ./src/Piral.Blazor.Tools --configuration $(buildConfiguration) --version-suffix pre.$BUILD_BUILDNUMBER --output ./dist
  displayName: 'Pack Tools (Pre)'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/blazor-'))

- script: dotnet pack ./src/Piral.Blazor.Tools --configuration $(buildConfiguration) --output ./dist
  displayName: 'Pack Tools'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))

- script: dotnet pack ./src/Piral.Blazor.DevServer --configuration $(buildConfiguration) --version-suffix pre.$BUILD_BUILDNUMBER --output ./dist
  displayName: 'Pack DevServer (Pre)'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/blazor-'))

- script: dotnet pack ./src/Piral.Blazor.DevServer --configuration $(buildConfiguration) --output ./dist
  displayName: 'Pack DevServer'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))

- task: NuGetCommand@2
  displayName: 'Publish Packages on NuGet'
  inputs:
    command: 'push'
    packagesToPush: 'dist/*.nupkg'
    publishFeedCredentials: 'nuget'
    nuGetFeedType: 'external'
